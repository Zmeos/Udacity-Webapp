'''
Created on 18. juni 2012

@author: Joakim
'''


import re
import os
import webapp2
import jinja2


template_dir = os.path.join(os.path.dirname(__file__), 'templates')
jinja_env = jinja2.Environment(loader = jinja2.FileSystemLoader(template_dir), 
                               autoescape = True)

class Handler(webapp2.RequestHandler):
    def write(self, *a,**kw):
        self.response.out.write(*a,**kw)
    def render_str(self, template, **params):
        t = jinja_env.get_template(template)
        return t.render(params)
    def render(self, template, **kw):
        self.write(self.render_str(template, **kw))




USER_RE = re.compile(r"^[a-zA-Z0-9_-]{3,20}$")
PASS_RE = re.compile(r"^.{3,20}$")
EMAIL_RE = re.compile(r"^[\S]+@[\S]+\.[\S]+$")
def valid_username(username):
    return USER_RE.match(username)

def valid_password(password):
    return PASS_RE.match(password)

def valid_email(email):
    return EMAIL_RE.match(email)


class MainPage(Handler):
    def get(self):
        self.response.headers['Content-Type'] = 'text/plain'
        self.write('Hello, signup World!')
     
class Signup(Handler):
    def write_form(self, username="", password="", verify="", email="", usernameError="", passwordError="", verifyError="", emailError=""):
        self.render('signup.html', username=username, password=password, verify=verify, email=email, usernameError=usernameError, passwordError= passwordError, verifyError=verifyError, emailError=emailError)
        #self.response.out.write(form % {"username":username,"password":password,"verify":verify,"email":email,"usernameError":usernameError,"passwordError":passwordError,"verifyError":verifyError,"emailError":emailError})
    def get(self):
        self.write_form()
    def post(self):
        usernameError = ""
        passwordError = ""
        verifyError = ""
        emailError = ""
        
        username = self.request.get('username')
        password = self.request.get('password')
        verify = self.request.get('verify')
        email = self.request.get('email'))
        
        if not valid_username(username):
            usernameError = "Not a valid Username"
        if not valid_password(password):
            passwordError = "Not a valid Password"
            
        if not(password == verify):
            verifyError = "Does not match what you entered in the password field"
            
        if not valid_email(email) and email:
            emailError = "Not a valid Email"
        
        if (valid_email(email) or not email) and valid_password(password) and valid_username(username) and password==verify:
            self.redirect('/unit4/welcome/?username=%s'%username)
        
        self.write_form(username,password,verify,email,usernameError,passwordError,verifyError,emailError)
class Welcome(Handler):
    def get(self):
        username = self.request.get('username')
        if valid_username(username):
            self.write('<h1>Welcome %s!</h1>'%(username))
        else:
            self.redirect('/unit4/signup')
app = webapp2.WSGIApplication([('/', MainPage),('/unit4/signup/?', Signup),('/unit4/welcome/?', Welcome)],
                              debug=True)
